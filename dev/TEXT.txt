889f965a180ba029f660b21a9d2608d68a3ed85b868b2b79bbb46ee6ee3b74fb

backup

    // ===============================================
    // üîä SPEECH RECOGNITION + EVENLABS TTS INTEGRATION
    // ===============================================

    const ELEVENLABS_API_KEY = "889f965a180ba029f660b21a9d2608d68a3ed85b868b2b79bbb46ee6ee3b74fb"; // <-- GANTI DENGAN API KEYMU
    const ELEVENLABS_VOICE_ID = "jsCqWAovK2LkecY7zXl4"; // bisa diganti suara lain dari ElevenLabs

    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
    let recognition;
    let isPaused = false;
    let speaking = false;

    // ===== Speech Recognition =====
    if (SpeechRecognition) {
      recognition = new SpeechRecognition();
      recognition.lang = "id-ID"; // bahasa Indonesia
      recognition.interimResults = false;
      recognition.continuous = true;

      recognition.onresult = (event) => {
        const transcript = event.results[event.results.length - 1][0].transcript.trim();
        console.log("üó£Ô∏è Kamu:", transcript);
        aiRespond(transcript);
      };

      recognition.onend = () => {
        if (!isPaused) recognition.start();
      };

      recognition.start();
    } else {
      alert("Browser tidak mendukung Speech Recognition.");
    }

    // ===== AI Logic (replace with real AI API if needed) =====
    function generateReply(text) {
      const msg = text.toLowerCase();
      if (msg.includes("halo") || msg.includes("hai")) return "Halo juga! Ada yang bisa aku bantu?";
      if (msg.includes("nama kamu")) return "Aku FX Intelligence, asisten suaramu.";
      if (msg.includes("apa kabar")) return "Aku baik, terima kasih sudah bertanya!";
      return "Aku belum mengerti maksudmu, bisa diulangi?";
    }

    // ===== AI Respond =====
    async function aiRespond(text) {
      if (speaking || isPaused) return;
      const reply = generateReply(text);
      console.log("ü§ñ AI:", reply);
      await speakWithElevenLabs(reply);
    }

    // ===== ElevenLabs Text-to-Speech API =====
    async function speakWithElevenLabs(message) {
      if (isPaused) return;
      speaking = true;

      try {
        const response = await fetch(`https://api.elevenlabs.io/v1/text-to-speech/${ELEVENLABS_VOICE_ID}`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "xi-api-key": ELEVENLABS_API_KEY,
          },
          body: JSON.stringify({
            text: message,
            model_id: "eleven_multilingual_v2",
            voice_settings: { stability: 0.4, similarity_boost: 0.8 }
          }),
        });

        if (!response.ok) throw new Error("Gagal ambil audio dari ElevenLabs");

        const audioBlob = await response.blob();
        const audioUrl = URL.createObjectURL(audioBlob);
        const audio = new Audio(audioUrl);
        audio.onended = () => (speaking = false);
        audio.volume = 1.0;
        await audio.play();

      } catch (err) {
        console.error("Error ElevenLabs:", err);
        speaking = false;
      }
    }

    // ===== Pause / Resume Button =====
    function togglePause() {
      const btn = document.getElementById("pauseBtn");
      if (!isPaused) {
        isPaused = true;
        btn.innerHTML = '<i class="fa-solid fa-play"></i>';
        recognition.stop();
        speechSynthesis.pause();
      } else {
        isPaused = false;
        btn.innerHTML = '<i class="fa-solid fa-pause"></i>';
        recognition.start();
        speechSynthesis.resume();
      }
    }


    voice:
    jsCqWAovK2LkecY7zXl4

    api key:
    889f965a180ba029f660b21a9d2608d68a3ed85b868b2b79bbb46ee6ee3b74fb

    

    backup js 2

    // =============================================================
// üéôÔ∏è FX Intelligence ‚Äî Speech-to-Text + AI + ElevenLabs Voice
// =============================================================

// üåê API Gateway PHP (AI saja)
const FX_API_URL = "http://localhost:8080/api.php";

// ElevenLabs TTS
const ELEVEN_API_KEY = "889f965a180ba029f660b21a9d2608d68a3ed85b868b2b79bbb46ee6ee3b74fb";
const VOICE_ID = "jsCqWAovK2LkecY7zXl4";

// üß† Status global
let isPaused = false;
let speaking = false;
let isListening = false;
let autoplayUnlocked = false;
let isRecognitionRunning = false;

// üéµ Unlock autoplay sekali saja
document.addEventListener("click", () => {
    if (!autoplayUnlocked) {
        const dummy = new Audio();
        dummy.src = "data:audio/mp3;base64,//uQxAAAAAAAAAAAAAAAAAAAA";
        dummy.volume = 0.001;
        dummy.play().catch(() => {});
        autoplayUnlocked = true;
        console.log("üîì Autoplay diizinkan oleh user");
    }
}, { once: true });

// === Inisialisasi Speech Recognition ===
const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
let recognition;

if (SpeechRecognition) {
    recognition = new SpeechRecognition();
    recognition.lang = "id-ID";
    recognition.interimResults = false;
    recognition.continuous = true;

    recognition.onstart = () => { console.log("üé§ Speech recognition dimulai..."); isRecognitionRunning = true; };
    recognition.onerror = (e) => { console.error("‚ö†Ô∏è Speech error:", e.error); isRecognitionRunning = false; };
    recognition.onend = () => {
        console.log("üõë Speech recognition berhenti"); isRecognitionRunning = false;
        if (isListening && !speaking) setTimeout(() => { if(!isRecognitionRunning) recognition.start(); }, 500);
    };
    recognition.onresult = (event) => {
        const transcript = event.results[event.results.length - 1][0].transcript.trim();
        console.log("üó£Ô∏è Kamu:", transcript);
        aiRespond(transcript);
    };
} else alert("Browser tidak mendukung Speech Recognition.");

// === Tombol Mic ===
const micBtn = document.getElementById("micBtn");
if (micBtn) {
    micBtn.addEventListener("click", () => {
        if (!isListening) {
            isListening = true;
            micBtn.innerHTML = '<i class="fas fa-microphone"></i>';
            if (!isRecognitionRunning) recognition.start();
            console.log("üéôÔ∏è Mic diaktifkan");
        } else {
            isListening = false;
            micBtn.innerHTML = '<i class="fas fa-microphone-slash"></i>';
            if (isRecognitionRunning) recognition.stop();
            console.log("üîá Mic dimatikan");
        }
    });
}

// === Fungsi utama respon AI ===
async function aiRespond(text) {
    if (speaking || isPaused) return;
    console.log("üì° Mengirim ke AI:", text);
    const reply = await getAIReply(text);
    console.log("ü§ñ AI Jawaban Diterima:", reply);
    await speakWithElevenLabs(reply);
}

// === Ambil jawaban dari PHP (‚Üí Python backend) ===
async function getAIReply(question) {
    try {
        const response = await fetch(FX_API_URL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ type: "ai", question })
        });
        const data = await response.json();
        return data.answer || "Terjadi kesalahan pada sistem AI.";
    } catch (e) {
        console.error("‚ùå Gagal ambil respons AI:", e);
        return "Gagal menghubungkan ke server AI.";
    }
}

// === ElevenLabs Text-to-Speech (langsung JS) ===
async function speakWithElevenLabs(message) {
    if (isPaused) return;
    speaking = true;

    try {
        const response = await fetch(`https://api.elevenlabs.io/v1/text-to-speech/${VOICE_ID}/stream`, {
            method: "POST",
            headers: {
                "xi-api-key": ELEVEN_API_KEY,
                "Content-Type": "application/json",
                "Accept": "audio/mpeg"
            },
            body: JSON.stringify({
                text: message,
                model_id: "eleven_multilingual_v2",
                voice_settings: { stability: 0.4, similarity_boost: 0.8 }
            })
        });

        if (!response.ok) throw new Error("Gagal ambil audio dari ElevenLabs");

        const blob = await response.blob();
        const url = URL.createObjectURL(blob);
        const audio = new Audio(url);

        audio.onended = () => {
            console.log("üîä Selesai bicara");
            speaking = false;
            if (isListening && !isRecognitionRunning) recognition.start();
        };

        await audio.play().catch(err => {
            console.warn("‚ö†Ô∏è Autoplay dicegah, klik halaman untuk mengizinkan:", err);
            speaking = false;
        });

    } catch (err) {
        console.error("‚ùå Error ElevenLabs:", err);
        speaking = false;
        if (isListening && !isRecognitionRunning) recognition.start();
    }
}


backup js 3

// =============================================================
// üéôÔ∏è FX Intelligence ‚Äî Speech-to-Text + AI + Web Speech API
// =============================================================

// üåê API Gateway PHP (AI saja)
const FX_API_URL = "http://localhost:8080/api.php";

// üß† Status global
let isPaused = false;
let speaking = false;
let isListening = false;
let autoplayUnlocked = false;
let isRecognitionRunning = false;

// üéµ Unlock autoplay sekali saja
document.addEventListener("click", () => {
    if (!autoplayUnlocked) {
        const dummy = new Audio();
        dummy.src = "data:audio/mp3;base64,//uQxAAAAAAAAAAAAAAAAAAAA";
        dummy.volume = 0.001;
        dummy.play().catch(() => {});
        autoplayUnlocked = true;
        console.log("üîì Autoplay diizinkan oleh user");
    }
}, { once: true });

// === Inisialisasi Speech Recognition ===
const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
let recognition;

if (SpeechRecognition) {
    recognition = new SpeechRecognition();
    recognition.lang = "id-ID";
    recognition.interimResults = false;
    recognition.continuous = true;

    recognition.onstart = () => { console.log("üé§ Speech recognition dimulai..."); isRecognitionRunning = true; };
    recognition.onerror = (e) => { console.error("‚ö†Ô∏è Speech error:", e.error); isRecognitionRunning = false; };
    recognition.onend = () => {
        console.log("üõë Speech recognition berhenti"); isRecognitionRunning = false;
        if (isListening && !speaking) setTimeout(() => { if (!isRecognitionRunning) recognition.start(); }, 500);
    };
    recognition.onresult = (event) => {
        const transcript = event.results[event.results.length - 1][0].transcript.trim();
        console.log("üó£Ô∏è Kamu:", transcript);
        aiRespond(transcript);
    };
} else alert("Browser tidak mendukung Speech Recognition.");

// === Tombol Mic ===
const micBtn = document.getElementById("micBtn");
if (micBtn) {
    micBtn.addEventListener("click", () => {
        if (!isListening) {
            isListening = true;
            micBtn.innerHTML = '<i class="fas fa-microphone"></i>';
            if (!isRecognitionRunning) recognition.start();
            console.log("üéôÔ∏è Mic diaktifkan");
        } else {
            isListening = false;
            micBtn.innerHTML = '<i class="fas fa-microphone-slash"></i>';
            if (isRecognitionRunning) recognition.stop();
            console.log("üîá Mic dimatikan");
        }
    });
}

// === Fungsi utama respon AI ===
async function aiRespond(text) {
    if (speaking || isPaused) return;
    console.log("üì° Mengirim ke AI:", text);
    const reply = await getAIReply(text);
    console.log("ü§ñ AI Jawaban Diterima:", reply);
    speakWithWebTTS(reply, "id"); // default ID female
}

// === Ambil jawaban dari PHP (‚Üí Python backend) ===
async function getAIReply(question) {
    try {
        const response = await fetch(FX_API_URL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ type: "ai", question })
        });
        const data = await response.json();
        return data.answer || "Terjadi kesalahan pada sistem AI.";
    } catch (e) {
        console.error("‚ùå Gagal ambil respons AI:", e);
        return "Gagal menghubungkan ke server AI.";
    }
}

// === Web Speech API Text-to-Speech (bawaan Chrome) ===
function speakWithWebTTS(message, lang = "id", gender = "female") {
    if (!window.speechSynthesis) {
        console.warn("Browser tidak mendukung Speech Synthesis");
        return;
    }
    speaking = true;

    const utter = new SpeechSynthesisUtterance(message);
    utter.lang = lang === "en" ? "en-US" : "id-ID";

    // Ambil semua voice yang tersedia
    const voices = speechSynthesis.getVoices();

    // Cari voice sesuai gender dan bahasa
    const selectedVoice = voices.find(v => 
        v.lang.startsWith(utter.lang) &&
        ((gender === "female" && v.name.toLowerCase().includes("female")) ||
         (gender === "male" && v.name.toLowerCase().includes("male")))
    ) || voices.find(v => v.lang.startsWith(utter.lang)) // fallback
      || voices[0]; // fallback global

    utter.voice = selectedVoice;

    utter.onend = () => {
        speaking = false;
        if (isListening && !isRecognitionRunning) recognition.start();
        console.log(`üîä Selesai bicara dengan voice: ${utter.voice.name}`);
    };

    speechSynthesis.speak(utter);
}

// === Tombol ganti bahasa dan gender ===
const langBtn = document.getElementById("langBtn");
if (langBtn) {
    langBtn.addEventListener("click", () => {
        // toggle bahasa
        const newLang = langBtn.dataset.lang === "id" ? "en" : "id";
        langBtn.dataset.lang = newLang;
        console.log(`üåê Bahasa TTS diganti menjadi: ${newLang}`);
    });
}

const genderBtn = document.getElementById("genderBtn");
if (genderBtn) {
    genderBtn.addEventListener("click", () => {
        // toggle gender
        const newGender = genderBtn.dataset.gender === "female" ? "male" : "female";
        genderBtn.dataset.gender = newGender;
        console.log(`üåê Gender TTS diganti menjadi: ${newGender}`);
    });
}
